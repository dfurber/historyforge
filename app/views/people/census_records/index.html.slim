- @full_layout = true

.container-fluid

  .pull-right

    - if current_user
      - unless current_page?(collection_path)
        = link_to 'All', collection_path, class: 'btn btn-default'
      - unless current_page?(unhoused_collection_path)
        = link_to 'Unhoused', unhoused_collection_path, class: 'btn btn-default'
      - unless current_page?(unreviewed_collection_path)
        = link_to 'Unreviewed', unreviewed_collection_path, class: 'btn btn-default'
    - if can?(:create, CensusRecord)
      = link_to 'Add New', new_resource_path, class: 'btn btn-default'
  h1.page-title= @page_title

  .row
    #census-records-filters= render 'filters'
    #census-records

      - if @records.blank?
        p.alert.alert-info No records found.
      - else

        = paginate @search.scoped
        = page_entries_info @search.scoped, entry_name: 'record'

        table.table.table-condensed.table-striped
          thead
            tr
              - @search.f.each do |field|
                th= t "simple_form.labels.census_record.#{field}", default: field.humanize
          tbody
            - @records.each do |row|
              - record = CensusRecordPresenter.new(row, current_user)
              tr
                - @search.f.each_with_index do |field, i|
                  td
                    - if i == 0
                      = link_to row.public_send(field), resource_path(row)
                    - else
                      = row.public_send field
                    - if i == 0 && !row.reviewed?
                      span.label.label-danger< NEW

    /  .panel.panel-default
        .panel-heading
          h4.panel-title Filters
        .panel-body
          = search_form_for @search, url: url_for(), builder: SimpleForm::FormBuilder do |form|
            = form.input :last_name_cont, label: 'Last Name'
            = form.input :street_name_cont, label: 'Street Name'
            = form.input :profession_cont, label: 'Profession'
            = form.input :industry_cont, label: 'Industry'
            = form.input :pob_cont, label: 'POB'
            /= form.input :building_id_null, as: :radio_buttons, label: 'No building yet'
            /- if can? :review, CensusRecord
              = form.input :reviewed_at_null, as: :radio_buttons, label: 'Unreviewed only'
            .form-actions
              = form.submit 'Search', class: 'btn btn-primary'
              =< form.submit 'Map It', class: 'btn btn-primary', id: 'search-map'
              =< link_to 'Reset', url_for(reset: true), class: 'btn btn-default'

#search-pagination-bottom
  = paginate @search.scoped

javascript:
  $('#new_s').advancedSearch({
    url: '#{File.join(url_for(), 'advanced_search_filters.json')}',
    cache: true,
    timestamp: #{AdvancedSearchFilterTimestamp.call(resource_class)},
    fields: #{@search.f.to_json.html_safe},
    filters: #{@search.s.to_json.html_safe},
    sorts: #{@search.sorts.to_json.html_safe}
  });
