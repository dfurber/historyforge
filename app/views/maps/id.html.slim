doctype html
html
  head
    meta[charset="utf-8"]
    = stylesheet_link_tag 'iD'
    = javascript_include_tag 'iD'
  body
    #id-container
    script
      |  if (typeof iD == 'undefined') { document.getElementById('id-container').innerHTML = 'This editor is supported ' + 'in Firefox, Chrome, Safari, Opera, and Internet Explorer 9 and above. ' + 'Please upgrade your browser or use Potlatch 2 to edit the map.'; document.getElementById('id-container').className = 'unsupported'; } else { <ruby code=" locale = "en""></ruby> var id = iD() .embed(true) .assetPath("/iD/") <ruby code="# Can't use asset_path('iD/') in production."></ruby> .assetMap(<ruby code="= assets("iD").to_json.html_safe"></ruby>) .locale("<ruby code="= locale"></ruby>", "<ruby code="= asset_path("iD/locales/#{locale}.json")"></ruby>") <ruby code=" if false "> .preauth({ url: "http://www.openstreetmap.org", oauth_token: "<ruby code="= APP_CONFIG["id_key"]"></ruby>", oauth_token_secret: "<ruby code="= APP_CONFIG["id_secret"]"></ruby>" }); </ruby> var imagery_overlay = _.find(iD.data.imagery, function(d) { return d.uuid && d.uuid === "mapwarper"; }); var background_overlay = _.find(id.background().overlayLayerSources(), function(d){ return d.uuid && d.uuid === "mapwarper"; }); imagery_overlay.template = "/<ruby code="=@overlay.class.table_name"></ruby>/tile/<ruby code="=@overlay.id"></ruby>/{zoom}/{x}/{y}.png"; <ruby code=" title = @overlay.class == Map ? @overlay.title : @overlay.name"></ruby> background_overlay.description = '<ruby code="= "#{APP_CONFIG['site_name']} #{@overlay.class.to_s} #{@overlay.id.to_s} #{h(title)} ""></ruby>'; //iname is used as a hack to correctly give the source in the changeset comment assigned background_overlay.iname = '<ruby code="= "#{APP_CONFIG['site_name']} #{@overlay.class.to_s} #{@overlay.id.to_s} ""></ruby>'; //twice to turn on and off to get the correct thing for source used in comment using iname id.background().toggleOverlayLayer(background_overlay); id.background().toggleOverlayLayer(background_overlay); d3.select('#id-container') .call(id.ui()); } 
