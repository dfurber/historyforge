- @full_layout = true

.container-fluid

  .pull-right
    span#search-pagination-top
      = paginate @search
      = page_entries_info @search.scoped, entry_name: 'record'
    - if can?(:create, Building)
      = link_to 'Add New', new_building_path, class: 'btn btn-default'
      = link_to 'Unpeopled', unpeopled_buildings_path, class: 'btn btn-default'
      - if can?(:review, Building)
        = link_to 'Unreviewed', unreviewed_buildings_path, class: 'btn btn-default'
      = link_to 'All', buildings_path, class: 'btn btn-default'
  h1.page-title= @page_title

  .row
    #buildings-filters= render 'filters'

    #buildings

      - if @buildings.blank?
        p.alert.alert-info No records found.
      - else

        table.table.table-condensed.table-striped
          thead
            tr
              - @search.f.each do |field|
                th= t "simple_form.labels.building.#{field}", default: field.humanize
              th Actions
          tbody
            - @buildings.each do |record|
              tr
                - @search.f.each_with_index do |field, i|
                  td
                    = record.public_send field
                    - if i == 0 && !record.reviewed?
                      span.label.label-danger< NEW
                td style="text-align:right;white-space:nowrap"
                  = link_to 'View', record.model, class: 'btn btn-xs btn-default'
                  - if can? :update, record.model
                    = link_to 'Edit', [:edit, record.model], class: 'btn btn-xs btn-default'

javascript:
  $('#new_s').advancedSearch({
    url: '#{File.join(url_for().sub(/\/unpeopled|\/unreviewed/, ''), 'advanced_search_filters.json')}',
    cache: true,
    timestamp: #{AdvancedSearchFilterTimestamp.call('Building')},
    fields: #{@search.f.to_json.html_safe},
    filters: #{@search.s.to_json.html_safe},
    sorts: #{@search.sorts.to_json.html_safe}
  });
